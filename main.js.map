{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  orders: any[] = [\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Is the Open Air case in proper temperature clean and sanitized (interior and exterior)\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Are 3 Bottle Wash/Rinse/Sanitize bottles available?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Is the Hot Beverage bar equipment available and working, free of spills, with clean/disinfected/sanitized coffee area counters?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Are 3 Bottle Wash/Rinse/Sanitize bottles available?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Are there 3 hand sanitizer stands on the sales floor for customer use, and are the dispensers filled with gel sanitizer solution?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Are 3 Bottle Wash/Rinse/Sanitize bottles available?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Are floors clean, to include edges and corners?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Are 3 Bottle Wash/Rinse/Sanitize bottles available?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Are all vault shelves fronted and faced and have proper shelf tags and POP tags?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Are 3 Bottle Wash/Rinse/Sanitize bottles available?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Are promotional items in-stock with POP tags?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Are 3 Bottle Wash/Rinse/Sanitize bottles available?\"\n    },\n    {\n      id: 2,\n      customerId: 4,\n      deliveryType: \"48 Is landscaping well manicured and free of debris?\"\n    },\n  ];\n  loading: boolean;\n\n\n  constructor() {\n    // let newOrder = gqlService.subscribe()\n\n\n  }\n\n  ngOnInit() {\n\n    this.orders.push({\n      id: 2,\n      customerId: 4,\n      deliveryType: \"Was the Franchisee/Store Leader at the store during the store walk?\"\n    })\n    // this.subscribeToNewComments({})\n  }\n\n  showOrderDetails(orderId: Number) {\n    // console.log(orderId)\n    let id = orderId\n  }\n\n  ngOnDestroy() {\n  }\n\n  subscribeToNewComments(params) {\n    \n  }\n\n}\n","<div class=\"container\">\n  <div class=\" row\" *ngFor=\"let order of orders; let i=index\">\n    <div class=\"col\">\n      <div class=\"course-preview\">\n        <h6>Sales Counter</h6>\n        <h5>Detail No. {{i+1}}</h5>\n        <!-- <a href=\"#\">View all chapters <i class=\"fas fa-chevron-right\"></i></a> -->\n        \n      </div>\n      <div class=\"course-info\">\n        <!-- <div class=\"progress-container\">\n          <div class=\"progress\"></div>\n          <span class=\"progress-text\">\n            Order Id: {{order.id}}\n          </span>\n        </div> -->\n        <!-- <h6>Customer Id: {{order.customerId}}</h6> -->\n        <p>{{order.deliveryType}}</p>\n        <button type=\"button\" class=\"btn\" (click)=\"showOrderDetails(order.id)\">Yes</button>\n        <Span style=\"width: 20px;\"></Span>\n        <!-- <div style=\"width: 20px;\"></div> -->\n        &nbsp;\n        <button type=\"button\" class=\"btn-no\" (click)=\"showOrderDetails(order.id)\">No</button>\n        \n      </div>\n    </div>\n  </div>\n\n    <!-- <div class=\"row\"> \n      <div class=\"col\">\n        <button type=\"button\" class=\"btn\" (click)=\"showOrderDetails(1)\">Yes</button>\n      </div>\n      <div class=\"col\">\n        <button type=\"button\" class=\"btn-no\" (click)=\"showOrderDetails(1)\">No</button>\n      </div>\n    </div> -->\n</div>\n\n<button class=\"floating-btn\">\n  Add Image\n</button>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}